// src/main/ipc/browser-events.ts
import { ipcMain, IpcMainInvokeEvent } from 'electron';
import { BrowserManager } from '../services/browser-manager';
import { WebContentsResult } from '../../shared/types/ipc';

export function setupBrowserEvents(browserManager: BrowserManager): void {
  ipcMain.handle(
    'create-web-contents',
    async (_: IpcMainInvokeEvent, url: string): Promise<WebContentsResult> => {
      return browserManager.createWebContents(url);
    }
  );

  ipcMain.handle(
    'end-session',
    async (): Promise<{ success: boolean }> => {
      return browserManager.endSession();
    }
  );
}

// src/main/ipc/monitoring.ts
import { ipcMain, BrowserWindow } from 'electron';
import { XHRRequest, ResourceEntry } from '../../shared/types/session';

export function setupMonitoringEvents(mainWindow: BrowserWindow): void {
  ipcMain.on('page-metrics', (_, data: XHRRequest | ResourceEntry) => {
    try {
      if (mainWindow && !mainWindow.isDestroyed()) {
        mainWindow.webContents.send('page-metrics', data);
      }
    } catch (error) {
      console.error('Error handling page metrics:', error);
    }
  });
}
